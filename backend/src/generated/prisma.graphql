# source: https://steven-server-3465ee5b08.herokuapp.com/News-Backend/dev
# timestamp: Wed May 01 2019 13:06:43 GMT-0700 (Pacific Daylight Time)

type AggregateArticle {
  count: Int!
}

type AggregateArticles {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type Article implements Node {
  id: ID!
  source: String
  author: String
  title: String
  description: String
  url: String
  urlToImage: String
  publishedAt: String
  content: String
}

"""A connection to a list of items."""
type ArticleConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ArticleEdge]!
  aggregate: AggregateArticle!
}

input ArticleCreateInput {
  source: String
  author: String
  title: String
  description: String
  url: String
  urlToImage: String
  publishedAt: String
  content: String
}

input ArticleCreateManyInput {
  create: [ArticleCreateInput!]
  connect: [ArticleWhereUniqueInput!]
}

"""An edge in a connection."""
type ArticleEdge {
  """The item at the end of the edge."""
  node: Article!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ArticleOrderByInput {
  id_ASC
  id_DESC
  source_ASC
  source_DESC
  author_ASC
  author_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  url_ASC
  url_DESC
  urlToImage_ASC
  urlToImage_DESC
  publishedAt_ASC
  publishedAt_DESC
  content_ASC
  content_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type ArticlePreviousValues {
  id: ID!
  source: String
  author: String
  title: String
  description: String
  url: String
  urlToImage: String
  publishedAt: String
  content: String
}

type Articles {
  article(where: ArticleWhereInput, orderBy: ArticleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Article!]
}

"""A connection to a list of items."""
type ArticlesConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ArticlesEdge]!
  aggregate: AggregateArticles!
}

input ArticlesCreateInput {
  article: ArticleCreateManyInput
}

"""An edge in a connection."""
type ArticlesEdge {
  """The item at the end of the edge."""
  node: Articles!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ArticlesOrderByInput {
  id_ASC
  id_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type ArticlesSubscriptionPayload {
  mutation: MutationType!
  node: Articles
  updatedFields: [String!]
}

input ArticlesSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ArticlesSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ArticlesSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ArticlesSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ArticlesWhereInput
}

type ArticleSubscriptionPayload {
  mutation: MutationType!
  node: Article
  updatedFields: [String!]
  previousValues: ArticlePreviousValues
}

input ArticleSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ArticleSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ArticleSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ArticleSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ArticleWhereInput
}

input ArticlesWhereInput {
  """Logical AND on all given filters."""
  AND: [ArticlesWhereInput!]

  """Logical OR on all given filters."""
  OR: [ArticlesWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ArticlesWhereInput!]
  article_every: ArticleWhereInput
  article_some: ArticleWhereInput
  article_none: ArticleWhereInput
}

input ArticleUpdateInput {
  source: String
  author: String
  title: String
  description: String
  url: String
  urlToImage: String
  publishedAt: String
  content: String
}

input ArticleUpdateManyMutationInput {
  source: String
  author: String
  title: String
  description: String
  url: String
  urlToImage: String
  publishedAt: String
  content: String
}

input ArticleWhereInput {
  """Logical AND on all given filters."""
  AND: [ArticleWhereInput!]

  """Logical OR on all given filters."""
  OR: [ArticleWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ArticleWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  source: String

  """All values that are not equal to given value."""
  source_not: String

  """All values that are contained in given list."""
  source_in: [String!]

  """All values that are not contained in given list."""
  source_not_in: [String!]

  """All values less than the given value."""
  source_lt: String

  """All values less than or equal the given value."""
  source_lte: String

  """All values greater than the given value."""
  source_gt: String

  """All values greater than or equal the given value."""
  source_gte: String

  """All values containing the given string."""
  source_contains: String

  """All values not containing the given string."""
  source_not_contains: String

  """All values starting with the given string."""
  source_starts_with: String

  """All values not starting with the given string."""
  source_not_starts_with: String

  """All values ending with the given string."""
  source_ends_with: String

  """All values not ending with the given string."""
  source_not_ends_with: String
  author: String

  """All values that are not equal to given value."""
  author_not: String

  """All values that are contained in given list."""
  author_in: [String!]

  """All values that are not contained in given list."""
  author_not_in: [String!]

  """All values less than the given value."""
  author_lt: String

  """All values less than or equal the given value."""
  author_lte: String

  """All values greater than the given value."""
  author_gt: String

  """All values greater than or equal the given value."""
  author_gte: String

  """All values containing the given string."""
  author_contains: String

  """All values not containing the given string."""
  author_not_contains: String

  """All values starting with the given string."""
  author_starts_with: String

  """All values not starting with the given string."""
  author_not_starts_with: String

  """All values ending with the given string."""
  author_ends_with: String

  """All values not ending with the given string."""
  author_not_ends_with: String
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  url: String

  """All values that are not equal to given value."""
  url_not: String

  """All values that are contained in given list."""
  url_in: [String!]

  """All values that are not contained in given list."""
  url_not_in: [String!]

  """All values less than the given value."""
  url_lt: String

  """All values less than or equal the given value."""
  url_lte: String

  """All values greater than the given value."""
  url_gt: String

  """All values greater than or equal the given value."""
  url_gte: String

  """All values containing the given string."""
  url_contains: String

  """All values not containing the given string."""
  url_not_contains: String

  """All values starting with the given string."""
  url_starts_with: String

  """All values not starting with the given string."""
  url_not_starts_with: String

  """All values ending with the given string."""
  url_ends_with: String

  """All values not ending with the given string."""
  url_not_ends_with: String
  urlToImage: String

  """All values that are not equal to given value."""
  urlToImage_not: String

  """All values that are contained in given list."""
  urlToImage_in: [String!]

  """All values that are not contained in given list."""
  urlToImage_not_in: [String!]

  """All values less than the given value."""
  urlToImage_lt: String

  """All values less than or equal the given value."""
  urlToImage_lte: String

  """All values greater than the given value."""
  urlToImage_gt: String

  """All values greater than or equal the given value."""
  urlToImage_gte: String

  """All values containing the given string."""
  urlToImage_contains: String

  """All values not containing the given string."""
  urlToImage_not_contains: String

  """All values starting with the given string."""
  urlToImage_starts_with: String

  """All values not starting with the given string."""
  urlToImage_not_starts_with: String

  """All values ending with the given string."""
  urlToImage_ends_with: String

  """All values not ending with the given string."""
  urlToImage_not_ends_with: String
  publishedAt: String

  """All values that are not equal to given value."""
  publishedAt_not: String

  """All values that are contained in given list."""
  publishedAt_in: [String!]

  """All values that are not contained in given list."""
  publishedAt_not_in: [String!]

  """All values less than the given value."""
  publishedAt_lt: String

  """All values less than or equal the given value."""
  publishedAt_lte: String

  """All values greater than the given value."""
  publishedAt_gt: String

  """All values greater than or equal the given value."""
  publishedAt_gte: String

  """All values containing the given string."""
  publishedAt_contains: String

  """All values not containing the given string."""
  publishedAt_not_contains: String

  """All values starting with the given string."""
  publishedAt_starts_with: String

  """All values not starting with the given string."""
  publishedAt_not_starts_with: String

  """All values ending with the given string."""
  publishedAt_ends_with: String

  """All values not ending with the given string."""
  publishedAt_not_ends_with: String
  content: String

  """All values that are not equal to given value."""
  content_not: String

  """All values that are contained in given list."""
  content_in: [String!]

  """All values that are not contained in given list."""
  content_not_in: [String!]

  """All values less than the given value."""
  content_lt: String

  """All values less than or equal the given value."""
  content_lte: String

  """All values greater than the given value."""
  content_gt: String

  """All values greater than or equal the given value."""
  content_gte: String

  """All values containing the given string."""
  content_contains: String

  """All values not containing the given string."""
  content_not_contains: String

  """All values starting with the given string."""
  content_starts_with: String

  """All values not starting with the given string."""
  content_not_starts_with: String

  """All values ending with the given string."""
  content_ends_with: String

  """All values not ending with the given string."""
  content_not_ends_with: String
}

input ArticleWhereUniqueInput {
  id: ID
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createUser(data: UserCreateInput!): User!
  createArticles(data: ArticlesCreateInput!): Articles!
  createArticle(data: ArticleCreateInput!): Article!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateArticle(data: ArticleUpdateInput!, where: ArticleWhereUniqueInput!): Article
  deleteUser(where: UserWhereUniqueInput!): User
  deleteArticle(where: ArticleWhereUniqueInput!): Article
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  upsertArticle(where: ArticleWhereUniqueInput!, create: ArticleCreateInput!, update: ArticleUpdateInput!): Article!
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  updateManyArticles(data: ArticleUpdateManyMutationInput!, where: ArticleWhereInput): BatchPayload!
  deleteManyUsers(where: UserWhereInput): BatchPayload!
  deleteManyArticleses(where: ArticlesWhereInput): BatchPayload!
  deleteManyArticles(where: ArticleWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

enum Permission {
  ADMIN
  USER
  PERMISSIONUPDATE
}

type Query {
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  articleses(where: ArticlesWhereInput, orderBy: ArticlesOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Articles]!
  articles(where: ArticleWhereInput, orderBy: ArticleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Article]!
  user(where: UserWhereUniqueInput!): User
  article(where: ArticleWhereUniqueInput!): Article
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  articlesesConnection(where: ArticlesWhereInput, orderBy: ArticlesOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ArticlesConnection!
  articlesConnection(where: ArticleWhereInput, orderBy: ArticleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ArticleConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

type Subscription {
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  articles(where: ArticlesSubscriptionWhereInput): ArticlesSubscriptionPayload
  article(where: ArticleSubscriptionWhereInput): ArticleSubscriptionPayload
}

type User implements Node {
  id: ID!
  name: String!
  email: String!
  password: String!
  lib: Int!
  cons: Int!
  resetToken: String
  resetTokenExpiry: Float
  permissions: [Permission!]!
}

"""A connection to a list of items."""
type UserConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  name: String!
  email: String!
  password: String!
  lib: Int
  cons: Int
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserCreatepermissionsInput
}

input UserCreatepermissionsInput {
  set: [Permission!]
}

"""An edge in a connection."""
type UserEdge {
  """The item at the end of the edge."""
  node: User!

  """A cursor for use in pagination."""
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  email_ASC
  email_DESC
  password_ASC
  password_DESC
  lib_ASC
  lib_DESC
  cons_ASC
  cons_DESC
  resetToken_ASC
  resetToken_DESC
  resetTokenExpiry_ASC
  resetTokenExpiry_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type UserPreviousValues {
  id: ID!
  name: String!
  email: String!
  password: String!
  lib: Int!
  cons: Int!
  resetToken: String
  resetTokenExpiry: Float
  permissions: [Permission!]!
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [UserSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input UserUpdateInput {
  name: String
  email: String
  password: String
  lib: Int
  cons: Int
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
}

input UserUpdateManyMutationInput {
  name: String
  email: String
  password: String
  lib: Int
  cons: Int
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
}

input UserUpdatepermissionsInput {
  set: [Permission!]
}

input UserWhereInput {
  """Logical AND on all given filters."""
  AND: [UserWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  lib: Int

  """All values that are not equal to given value."""
  lib_not: Int

  """All values that are contained in given list."""
  lib_in: [Int!]

  """All values that are not contained in given list."""
  lib_not_in: [Int!]

  """All values less than the given value."""
  lib_lt: Int

  """All values less than or equal the given value."""
  lib_lte: Int

  """All values greater than the given value."""
  lib_gt: Int

  """All values greater than or equal the given value."""
  lib_gte: Int
  cons: Int

  """All values that are not equal to given value."""
  cons_not: Int

  """All values that are contained in given list."""
  cons_in: [Int!]

  """All values that are not contained in given list."""
  cons_not_in: [Int!]

  """All values less than the given value."""
  cons_lt: Int

  """All values less than or equal the given value."""
  cons_lte: Int

  """All values greater than the given value."""
  cons_gt: Int

  """All values greater than or equal the given value."""
  cons_gte: Int
  resetToken: String

  """All values that are not equal to given value."""
  resetToken_not: String

  """All values that are contained in given list."""
  resetToken_in: [String!]

  """All values that are not contained in given list."""
  resetToken_not_in: [String!]

  """All values less than the given value."""
  resetToken_lt: String

  """All values less than or equal the given value."""
  resetToken_lte: String

  """All values greater than the given value."""
  resetToken_gt: String

  """All values greater than or equal the given value."""
  resetToken_gte: String

  """All values containing the given string."""
  resetToken_contains: String

  """All values not containing the given string."""
  resetToken_not_contains: String

  """All values starting with the given string."""
  resetToken_starts_with: String

  """All values not starting with the given string."""
  resetToken_not_starts_with: String

  """All values ending with the given string."""
  resetToken_ends_with: String

  """All values not ending with the given string."""
  resetToken_not_ends_with: String
  resetTokenExpiry: Float

  """All values that are not equal to given value."""
  resetTokenExpiry_not: Float

  """All values that are contained in given list."""
  resetTokenExpiry_in: [Float!]

  """All values that are not contained in given list."""
  resetTokenExpiry_not_in: [Float!]

  """All values less than the given value."""
  resetTokenExpiry_lt: Float

  """All values less than or equal the given value."""
  resetTokenExpiry_lte: Float

  """All values greater than the given value."""
  resetTokenExpiry_gt: Float

  """All values greater than or equal the given value."""
  resetTokenExpiry_gte: Float
}

input UserWhereUniqueInput {
  id: ID
  email: String
}
